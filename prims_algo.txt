
 void solve(){
      int n,m;
      cin>>n>>m;

      vector<pair<int,int>> adj[n+1];
      
      for(int i=0;i<m;i++){
         int u,v,w;
         cin>>u>>v>>w;
         adj[u].push_back(make_pair(v,w));
         adj[v].push_back(make_pair(u,w));
      }

      priority_queue <pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
      
      int vis[n+1];
      int par[n+1];
      int key[n+1];

      for(int i=1;i<=n;i++) vis[i]=false;
      for(int i=1;i<=n;i++) par[i]=-1;
      for(int i=1;i<=n;i++) key[i]=INT_MAX;
      
      key[1]=0;
      pq.push(make_pair(0,1));
      int ans=0;

      for(int i=0;i<n;i++){
          ans+=pq.top().first;
          int curr=pq.top().second;
          
          pq.pop();

          vis[curr]=true;
          
          for(auto x:adj[curr]){
              if(vis[x.first] || key[x.first]< x.second) continue;
              pq.push(make_pair(x.second,x.first));
              par[x.first]=curr;
              key[x.first]=x.second;  
          } 
      }

      cout<<ans;
      for(auto x:par) cout<<x<<" ";

 }